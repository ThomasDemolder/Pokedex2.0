@page "/home2"
@using Models
@using Util
@inject PokeClient client
@inject FavoriteService favoriteService

<div class="container">
    <img src="/img/Pokédex_logo.png" alt="app title" class="app-title"/>
    <div class="pokemon-row">
        @foreach (var pokemon in pokemonList)
        {
            <div class="pokemon-card">
                <img src="@pokemon.sprites.front_default" alt="Pokemon Sprite" />
                <h4 class="pokemon-name">@pokemon.name</h4>
                <div class="type-row">
                    @foreach (var type in pokemon.types)
                    {
                        <span class="type-badge" style="background-color: @PokeColor.GetTypeColor(@type.type.name)">@type.type.name</span>
                    }
                </div>
                @if (!IsFavorite(pokemon))
                {
                    <button class="buton-buton" @onclick="() => AddToFavorites(pokemon)">Add favorites</button>
                }
            </div>
        }
    </div>
</div>

<h1>@pokemon.name</h1>

@code {
    Pokemon pokemon = new Pokemon();
    List<Pokemon> pokemonList = new List<Pokemon>();

    protected override async Task OnInitializedAsync()
    {
        for (int i= 1; i<152; i++)
        {
            pokemonList.Add(await client.GetPokemon(i.ToString()));
            StateHasChanged();
        }
    }
    private async Task AddToFavorites(Pokemon pokemon)
    {
        await favoriteService.AddToFavorites(pokemon);
        StateHasChanged(); // Pour rafraîchir l'UI, surtout si vous avez une indication visuelle des favoris
    }

    private bool IsFavorite(Pokemon pokemon)
    {
        return favoriteService.GetFavorites().Any(p => p.id == pokemon.id);
    }
}